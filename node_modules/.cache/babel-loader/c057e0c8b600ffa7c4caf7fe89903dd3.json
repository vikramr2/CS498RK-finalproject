{"ast":null,"code":"var _jsxFileName = \"/Users/vikram/Documents/School/CS498RK/finalproject/src/components/Login/login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Grid, TextField, Button, Stack, Snackbar, Alert } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { firebaseConfig } from './authenticator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  containerBox: {\n    position: 'absolute',\n    left: '50%',\n    top: '40%',\n    transform: 'translate(-50%, -50%)'\n  },\n  gridItem: {\n    minWidth: \"300px\"\n  },\n  textFieldBox: {\n    width: '100%'\n  },\n  buttonFormat: {\n    textAlign: \"center\"\n  }\n});\nexport default function Login() {\n  _s();\n\n  var style = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [openInvalidLogin, setOpenInvalidLogin] = useState(false);\n  const [openInvalidRegister, setOpenInvalidRegister] = useState(false);\n  const [openSuccess, setOpenSuccess] = useState(false); // Initialize Firebase\n\n  initializeApp(firebaseConfig);\n  const auth = getAuth();\n\n  function updateEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function updatePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function updateInvalidLogin(e) {\n    setOpenInvalidLogin(false);\n  }\n\n  function updateOpenInvalidRegister(e) {\n    setOpenInvalidRegister(false);\n  }\n\n  function updateOpenSuccess(e) {\n    setOpenSuccess(false);\n  }\n\n  function onSubmit(e) {\n    if (email === \"\" || password === \"\") {\n      setOpenInvalidRegister(true);\n      return;\n    }\n\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user;\n      console.log(\"Logged In\");\n      console.log(user);\n    }).catch(error => {\n      switch (error.code) {\n        case 'auth/wrong-password':\n          setOpenInvalidLogin(true);\n          console.log(`Wrong Password`);\n          break;\n\n        case 'auth/user-not-found':\n          setOpenInvalidLogin(true);\n          console.log(`No user with the Email address ${email} exists.`);\n          break;\n\n        case 'auth/invalid-email':\n          setOpenInvalidLogin(true);\n          console.log(`Email address is not correctly formatted.`);\n          break;\n\n        default:\n          console.log(error.message);\n          break;\n      }\n    });\n  }\n\n  function onRegister(e) {\n    if (email === \"\" || password === \"\") {\n      setOpenInvalidRegister(true);\n      return;\n    }\n\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user;\n      console.log(\"Registered\");\n      console.log(user);\n    }).catch(error => {\n      switch (error.code) {\n        case 'auth/email-already-in-use':\n          setOpenInvalidRegister(true);\n          console.log(`Email address ${email} already in use`);\n          break;\n\n        case 'auth/invalid-email':\n          setOpenInvalidRegister(true);\n          console.log(`Email address ${email} is invalid.`);\n          break;\n\n        case 'auth/operation-not-allowed':\n          setOpenInvalidRegister(true);\n          console.log(`Error during sign up.`);\n          break;\n\n        case 'auth/weak-password':\n          setOpenInvalidRegister(true);\n          console.log('Password is not strong enough. Add additional characters including special characters and numbers.');\n          break;\n\n        default:\n          console.log(error.message);\n          break;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: openInvalidLogin,\n      onClose: updateInvalidLogin,\n      autoHideDuration: 3000,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: updateInvalidLogin,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Invalid Email/ Incorrect Password entered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: openInvalidRegister,\n      onClose: updateOpenInvalidRegister,\n      autoHideDuration: 3000,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: updateOpenInvalidRegister,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: \"User already exists/ Email or Password field not completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: openSuccess,\n      onClose: updateOpenSuccess,\n      autoHideDuration: 3000,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: updateOpenSuccess,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Login Successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      rowSpacing: 2,\n      direction: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      className: style.containerBox,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        align: \"center\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        className: style.gridItem,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          required: true,\n          className: style.textFieldBox,\n          onChange: updateEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        className: style.gridItem,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\",\n          required: true,\n          className: style.textFieldBox,\n          onChange: updatePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: onSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: onRegister,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"OUEhUBSphJ4cSyDxIzGxht2T2Po=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/vikram/Documents/School/CS498RK/finalproject/src/components/Login/login.js"],"names":["useState","Grid","TextField","Button","Stack","Snackbar","Alert","makeStyles","initializeApp","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","firebaseConfig","useStyles","containerBox","position","left","top","transform","gridItem","minWidth","textFieldBox","width","buttonFormat","textAlign","Login","style","email","setEmail","password","setPassword","openInvalidLogin","setOpenInvalidLogin","openInvalidRegister","setOpenInvalidRegister","openSuccess","setOpenSuccess","auth","updateEmail","e","target","value","updatePassword","updateInvalidLogin","updateOpenInvalidRegister","updateOpenSuccess","onSubmit","then","userCredential","user","console","log","catch","error","code","message","onRegister","vertical","horizontal"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Grid, TextField, Button, Stack, Snackbar, Alert } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { firebaseConfig } from './authenticator';\n\nconst useStyles = makeStyles({\n  containerBox: {\n    position: 'absolute', left: '50%', top: '40%',\n    transform: 'translate(-50%, -50%)',\n  },\n  gridItem: {\n    minWidth: \"300px\"\n  },\n  textFieldBox: {\n    width: '100%'\n  },\n  buttonFormat: {\n    textAlign: \"center\"\n  },\n\n\n});\n\nexport default function Login() {\n  var style = useStyles()\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [openInvalidLogin, setOpenInvalidLogin] = useState(false);\n  const [openInvalidRegister, setOpenInvalidRegister] = useState(false);\n  const [openSuccess, setOpenSuccess] = useState(false);\n\n  // Initialize Firebase\n  initializeApp(firebaseConfig);\n  const auth = getAuth();\n\n  function updateEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function updatePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function updateInvalidLogin(e) {\n    setOpenInvalidLogin(false);\n  }\n\n  function updateOpenInvalidRegister(e) {\n    setOpenInvalidRegister(false);\n  }\n  function updateOpenSuccess(e) {\n    setOpenSuccess(false);\n  }\n\n  function onSubmit(e) {\n    if (email === \"\" || password === \"\") {\n      setOpenInvalidRegister(true);\n      return;\n    }\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in \n        const user = userCredential.user;\n        console.log(\"Logged In\");\n        console.log(user);\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case 'auth/wrong-password':\n            setOpenInvalidLogin(true);\n            console.log(`Wrong Password`);\n            break;\n          case 'auth/user-not-found':\n            setOpenInvalidLogin(true);\n            console.log(`No user with the Email address ${email} exists.`);\n            break;\n          case 'auth/invalid-email':\n            setOpenInvalidLogin(true);\n            console.log(`Email address is not correctly formatted.`);\n            break;\n          \n          default:\n            console.log(error.message);\n            break;\n        }\n      });\n  }\n\n  function onRegister(e) {\n    if (email === \"\" || password === \"\") {\n      setOpenInvalidRegister(true);\n      return;\n    }\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in \n        const user = userCredential.user;\n        console.log(\"Registered\");\n        console.log(user);\n\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            setOpenInvalidRegister(true);\n            console.log(`Email address ${email} already in use`);\n            break;\n          case 'auth/invalid-email':\n            setOpenInvalidRegister(true);\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            setOpenInvalidRegister(true);\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            setOpenInvalidRegister(true);\n            console.log('Password is not strong enough. Add additional characters including special characters and numbers.');\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n      });\n  }\n\n  return(\n    <div>\n      <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal:'center' }}\n          open={openInvalidLogin}\n          onClose = {updateInvalidLogin}\n          autoHideDuration={3000}\n        > \n          <Alert onClose={updateInvalidLogin} severity=\"error\" sx={{ width: '100%' }}>\n            Invalid Email/ Incorrect Password entered\n          </Alert>\n        </Snackbar>\n\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal:'center' }}\n          open={openInvalidRegister}\n          onClose = {updateOpenInvalidRegister}\n          autoHideDuration={3000}\n        >\n          <Alert onClose={updateOpenInvalidRegister} severity=\"error\" sx={{ width: '100%' }}>\n            User already exists/ Email or Password field not completed\n          </Alert>\n        </Snackbar>\n\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal:'center' }}\n          open={openSuccess}\n          onClose = {updateOpenSuccess}\n          autoHideDuration={3000}\n        >\n          <Alert onClose={updateOpenSuccess} severity=\"success\" sx={{ width: '100%' }}>\n            Login Successful!\n          </Alert>\n        </Snackbar>\n      <Grid \n      container \n      rowSpacing = {2} \n      direction=\"column\"\n      alignItems = \"center\"\n      justifyContent=\"center\"\n      className={style.containerBox}\n      >\n\n        <Grid \n        item \n        sm = {12} \n        align=\"center\"\n        justify=\"center\">\n          <h2>Login</h2>\n        </Grid>\n\n        <Grid \n        item \n        sm = {12}\n        className={style.gridItem}\n        >\n          <TextField\n            label = \"Email\"\n            required = {true}\n            className={style.textFieldBox}\n            onChange = {updateEmail}\n          />\n        </Grid>\n\n        <Grid \n        item \n        sm = {12}\n        className={style.gridItem}\n        >\n          <TextField\n            label = \"Password\"\n            type='password'\n            required = {true}\n            className={style.textFieldBox}\n            onChange = {updatePassword}\n          />\n\n        </Grid>\n\n        <Grid \n        item \n        sm = {12}\n        >\n          <Stack spacing={2} direction=\"row\"> \n            <Button variant=\"contained\" onClick={onSubmit}>Submit</Button>\n            <Button variant=\"contained\" onClick={onRegister}>Register</Button>\n          </Stack>\n\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}