{"ast":null,"code":"var _jsxFileName = \"/Users/vikram/Documents/School/CS498RK/finalproject/src/components/auth/route.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useAuthState } from './firebase';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthenticatedRoute = _ref => {\n  _s();\n\n  let {\n    component: C,\n    ...props\n  } = _ref;\n  const {\n    isAuthenticated\n  } = useAuthState();\n  console.log(`AuthenticatedRoute: ${isAuthenticated}`);\n  return /*#__PURE__*/_jsxDEV(Route, { ...props,\n    render: routeProps => isAuthenticated ? /*#__PURE__*/_jsxDEV(C, { ...routeProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthenticatedRoute, \"ldjIdz102d6q/CVmwCs+Hexqd64=\", false, function () {\n  return [useAuthState];\n});\n\n_c = AuthenticatedRoute;\nexport const UnauthenticatedRoute = _ref2 => {\n  _s2();\n\n  let {\n    component: C,\n    ...props\n  } = _ref2;\n  const {\n    isAuthenticated\n  } = useAuthState();\n  console.log(`UnauthenticatedRoute: ${isAuthenticated}`);\n  return /*#__PURE__*/_jsxDEV(Route, { ...props,\n    render: routeProps => !isAuthenticated ? /*#__PURE__*/_jsxDEV(C, { ...routeProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(UnauthenticatedRoute, \"ldjIdz102d6q/CVmwCs+Hexqd64=\", false, function () {\n  return [useAuthState];\n});\n\n_c2 = UnauthenticatedRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");\n$RefreshReg$(_c2, \"UnauthenticatedRoute\");","map":{"version":3,"sources":["/Users/vikram/Documents/School/CS498RK/finalproject/src/components/auth/route.js"],"names":["useAuthState","Route","Redirect","AuthenticatedRoute","component","C","props","isAuthenticated","console","log","routeProps","UnauthenticatedRoute"],"mappings":";;;;AAAA,SAASA,YAAT,QAA6B,YAA7B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,SAAS,EAAEC,CAAb;AAAgB,OAAGC;AAAnB,GAA+B;AAChE,QAAM;AAAEC,IAAAA;AAAF,MAAsBP,YAAY,EAAxC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBF,eAAgB,EAAnD;AACA,sBACE,QAAC,KAAD,OACMD,KADN;AAEE,IAAA,MAAM,EAAEI,UAAU,IAChBH,eAAe,gBAAG,QAAC,CAAD,OAAOG;AAAP;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA2B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAH9C;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXM;;GAAMP,kB;UACiBH,Y;;;KADjBG,kB;AAab,OAAO,MAAMQ,oBAAoB,GAAG,SAAgC;AAAA;;AAAA,MAA/B;AAAEP,IAAAA,SAAS,EAAEC,CAAb;AAAgB,OAAGC;AAAnB,GAA+B;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAsBP,YAAY,EAAxC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBF,eAAgB,EAArD;AACA,sBACE,QAAC,KAAD,OACMD,KADN;AAEE,IAAA,MAAM,EAAEI,UAAU,IAChB,CAACH,eAAD,gBAAmB,QAAC,CAAD,OAAOG;AAAP;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAA2C,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAH/C;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXM;;IAAMC,oB;UACiBX,Y;;;MADjBW,oB","sourcesContent":["import { useAuthState } from './firebase'\nimport { Route, Redirect } from 'react-router-dom'; \n\nexport const AuthenticatedRoute = ({ component: C, ...props }) => {\n  const { isAuthenticated } = useAuthState()\n  console.log(`AuthenticatedRoute: ${isAuthenticated}`)\n  return (\n    <Route\n      {...props}\n      render={routeProps =>\n        isAuthenticated ? <C {...routeProps} /> : <Redirect to=\"/login\" />\n      }\n    />\n  )\n}\n\nexport const UnauthenticatedRoute = ({ component: C, ...props }) => {\n  const { isAuthenticated } = useAuthState()\n  console.log(`UnauthenticatedRoute: ${isAuthenticated}`)\n  return (\n    <Route\n      {...props}\n      render={routeProps =>\n        !isAuthenticated ? <C {...routeProps} /> : <Redirect to=\"/\" />\n      }\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}